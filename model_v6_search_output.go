/*
pleasant password server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V6SearchOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V6SearchOutput{}

// V6SearchOutput 
type V6SearchOutput struct {
	Credentials []V6CredentialSearchResult `json:"Credentials,omitempty"`
	Groups []V6CredentialGroupSearchResult `json:"Groups,omitempty"`
}

// NewV6SearchOutput instantiates a new V6SearchOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV6SearchOutput() *V6SearchOutput {
	this := V6SearchOutput{}
	return &this
}

// NewV6SearchOutputWithDefaults instantiates a new V6SearchOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV6SearchOutputWithDefaults() *V6SearchOutput {
	this := V6SearchOutput{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *V6SearchOutput) GetCredentials() []V6CredentialSearchResult {
	if o == nil || IsNil(o.Credentials) {
		var ret []V6CredentialSearchResult
		return ret
	}
	return o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6SearchOutput) GetCredentialsOk() ([]V6CredentialSearchResult, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *V6SearchOutput) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given []V6CredentialSearchResult and assigns it to the Credentials field.
func (o *V6SearchOutput) SetCredentials(v []V6CredentialSearchResult) {
	o.Credentials = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *V6SearchOutput) GetGroups() []V6CredentialGroupSearchResult {
	if o == nil || IsNil(o.Groups) {
		var ret []V6CredentialGroupSearchResult
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6SearchOutput) GetGroupsOk() ([]V6CredentialGroupSearchResult, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *V6SearchOutput) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []V6CredentialGroupSearchResult and assigns it to the Groups field.
func (o *V6SearchOutput) SetGroups(v []V6CredentialGroupSearchResult) {
	o.Groups = v
}

func (o V6SearchOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V6SearchOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Credentials) {
		toSerialize["Credentials"] = o.Credentials
	}
	if !IsNil(o.Groups) {
		toSerialize["Groups"] = o.Groups
	}
	return toSerialize, nil
}

type NullableV6SearchOutput struct {
	value *V6SearchOutput
	isSet bool
}

func (v NullableV6SearchOutput) Get() *V6SearchOutput {
	return v.value
}

func (v *NullableV6SearchOutput) Set(val *V6SearchOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableV6SearchOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableV6SearchOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV6SearchOutput(val *V6SearchOutput) *NullableV6SearchOutput {
	return &NullableV6SearchOutput{value: val, isSet: true}
}

func (v NullableV6SearchOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV6SearchOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


