/*
pleasant password server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V6ServerInfoOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V6ServerInfoOutput{}

// V6ServerInfoOutput 
type V6ServerInfoOutput struct {
	ServerVersion *string `json:"ServerVersion,omitempty"`
	NetVersion *string `json:"NetVersion,omitempty"`
	OsVersion *string `json:"OsVersion,omitempty"`
	PortSettings *string `json:"PortSettings,omitempty"`
	DnsInformation *string `json:"DnsInformation,omitempty"`
	Ping *string `json:"Ping,omitempty"`
}

// NewV6ServerInfoOutput instantiates a new V6ServerInfoOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV6ServerInfoOutput() *V6ServerInfoOutput {
	this := V6ServerInfoOutput{}
	return &this
}

// NewV6ServerInfoOutputWithDefaults instantiates a new V6ServerInfoOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV6ServerInfoOutputWithDefaults() *V6ServerInfoOutput {
	this := V6ServerInfoOutput{}
	return &this
}

// GetServerVersion returns the ServerVersion field value if set, zero value otherwise.
func (o *V6ServerInfoOutput) GetServerVersion() string {
	if o == nil || IsNil(o.ServerVersion) {
		var ret string
		return ret
	}
	return *o.ServerVersion
}

// GetServerVersionOk returns a tuple with the ServerVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6ServerInfoOutput) GetServerVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ServerVersion) {
		return nil, false
	}
	return o.ServerVersion, true
}

// HasServerVersion returns a boolean if a field has been set.
func (o *V6ServerInfoOutput) HasServerVersion() bool {
	if o != nil && !IsNil(o.ServerVersion) {
		return true
	}

	return false
}

// SetServerVersion gets a reference to the given string and assigns it to the ServerVersion field.
func (o *V6ServerInfoOutput) SetServerVersion(v string) {
	o.ServerVersion = &v
}

// GetNetVersion returns the NetVersion field value if set, zero value otherwise.
func (o *V6ServerInfoOutput) GetNetVersion() string {
	if o == nil || IsNil(o.NetVersion) {
		var ret string
		return ret
	}
	return *o.NetVersion
}

// GetNetVersionOk returns a tuple with the NetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6ServerInfoOutput) GetNetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.NetVersion) {
		return nil, false
	}
	return o.NetVersion, true
}

// HasNetVersion returns a boolean if a field has been set.
func (o *V6ServerInfoOutput) HasNetVersion() bool {
	if o != nil && !IsNil(o.NetVersion) {
		return true
	}

	return false
}

// SetNetVersion gets a reference to the given string and assigns it to the NetVersion field.
func (o *V6ServerInfoOutput) SetNetVersion(v string) {
	o.NetVersion = &v
}

// GetOsVersion returns the OsVersion field value if set, zero value otherwise.
func (o *V6ServerInfoOutput) GetOsVersion() string {
	if o == nil || IsNil(o.OsVersion) {
		var ret string
		return ret
	}
	return *o.OsVersion
}

// GetOsVersionOk returns a tuple with the OsVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6ServerInfoOutput) GetOsVersionOk() (*string, bool) {
	if o == nil || IsNil(o.OsVersion) {
		return nil, false
	}
	return o.OsVersion, true
}

// HasOsVersion returns a boolean if a field has been set.
func (o *V6ServerInfoOutput) HasOsVersion() bool {
	if o != nil && !IsNil(o.OsVersion) {
		return true
	}

	return false
}

// SetOsVersion gets a reference to the given string and assigns it to the OsVersion field.
func (o *V6ServerInfoOutput) SetOsVersion(v string) {
	o.OsVersion = &v
}

// GetPortSettings returns the PortSettings field value if set, zero value otherwise.
func (o *V6ServerInfoOutput) GetPortSettings() string {
	if o == nil || IsNil(o.PortSettings) {
		var ret string
		return ret
	}
	return *o.PortSettings
}

// GetPortSettingsOk returns a tuple with the PortSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6ServerInfoOutput) GetPortSettingsOk() (*string, bool) {
	if o == nil || IsNil(o.PortSettings) {
		return nil, false
	}
	return o.PortSettings, true
}

// HasPortSettings returns a boolean if a field has been set.
func (o *V6ServerInfoOutput) HasPortSettings() bool {
	if o != nil && !IsNil(o.PortSettings) {
		return true
	}

	return false
}

// SetPortSettings gets a reference to the given string and assigns it to the PortSettings field.
func (o *V6ServerInfoOutput) SetPortSettings(v string) {
	o.PortSettings = &v
}

// GetDnsInformation returns the DnsInformation field value if set, zero value otherwise.
func (o *V6ServerInfoOutput) GetDnsInformation() string {
	if o == nil || IsNil(o.DnsInformation) {
		var ret string
		return ret
	}
	return *o.DnsInformation
}

// GetDnsInformationOk returns a tuple with the DnsInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6ServerInfoOutput) GetDnsInformationOk() (*string, bool) {
	if o == nil || IsNil(o.DnsInformation) {
		return nil, false
	}
	return o.DnsInformation, true
}

// HasDnsInformation returns a boolean if a field has been set.
func (o *V6ServerInfoOutput) HasDnsInformation() bool {
	if o != nil && !IsNil(o.DnsInformation) {
		return true
	}

	return false
}

// SetDnsInformation gets a reference to the given string and assigns it to the DnsInformation field.
func (o *V6ServerInfoOutput) SetDnsInformation(v string) {
	o.DnsInformation = &v
}

// GetPing returns the Ping field value if set, zero value otherwise.
func (o *V6ServerInfoOutput) GetPing() string {
	if o == nil || IsNil(o.Ping) {
		var ret string
		return ret
	}
	return *o.Ping
}

// GetPingOk returns a tuple with the Ping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6ServerInfoOutput) GetPingOk() (*string, bool) {
	if o == nil || IsNil(o.Ping) {
		return nil, false
	}
	return o.Ping, true
}

// HasPing returns a boolean if a field has been set.
func (o *V6ServerInfoOutput) HasPing() bool {
	if o != nil && !IsNil(o.Ping) {
		return true
	}

	return false
}

// SetPing gets a reference to the given string and assigns it to the Ping field.
func (o *V6ServerInfoOutput) SetPing(v string) {
	o.Ping = &v
}

func (o V6ServerInfoOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V6ServerInfoOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServerVersion) {
		toSerialize["ServerVersion"] = o.ServerVersion
	}
	if !IsNil(o.NetVersion) {
		toSerialize["NetVersion"] = o.NetVersion
	}
	if !IsNil(o.OsVersion) {
		toSerialize["OsVersion"] = o.OsVersion
	}
	if !IsNil(o.PortSettings) {
		toSerialize["PortSettings"] = o.PortSettings
	}
	if !IsNil(o.DnsInformation) {
		toSerialize["DnsInformation"] = o.DnsInformation
	}
	if !IsNil(o.Ping) {
		toSerialize["Ping"] = o.Ping
	}
	return toSerialize, nil
}

type NullableV6ServerInfoOutput struct {
	value *V6ServerInfoOutput
	isSet bool
}

func (v NullableV6ServerInfoOutput) Get() *V6ServerInfoOutput {
	return v.value
}

func (v *NullableV6ServerInfoOutput) Set(val *V6ServerInfoOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableV6ServerInfoOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableV6ServerInfoOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV6ServerInfoOutput(val *V6ServerInfoOutput) *NullableV6ServerInfoOutput {
	return &NullableV6ServerInfoOutput{value: val, isSet: true}
}

func (v NullableV6ServerInfoOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV6ServerInfoOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


