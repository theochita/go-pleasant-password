/*
pleasant password server

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V6AttachmentResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V6AttachmentResult{}

// V6AttachmentResult 
type V6AttachmentResult struct {
	CredentialObjectId *string `json:"CredentialObjectId,omitempty"`
	FileName *string `json:"FileName,omitempty"`
	FileData *string `json:"FileData,omitempty"`
	FileSize *int32 `json:"FileSize,omitempty"`
}

// NewV6AttachmentResult instantiates a new V6AttachmentResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV6AttachmentResult() *V6AttachmentResult {
	this := V6AttachmentResult{}
	return &this
}

// NewV6AttachmentResultWithDefaults instantiates a new V6AttachmentResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV6AttachmentResultWithDefaults() *V6AttachmentResult {
	this := V6AttachmentResult{}
	return &this
}

// GetCredentialObjectId returns the CredentialObjectId field value if set, zero value otherwise.
func (o *V6AttachmentResult) GetCredentialObjectId() string {
	if o == nil || IsNil(o.CredentialObjectId) {
		var ret string
		return ret
	}
	return *o.CredentialObjectId
}

// GetCredentialObjectIdOk returns a tuple with the CredentialObjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6AttachmentResult) GetCredentialObjectIdOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialObjectId) {
		return nil, false
	}
	return o.CredentialObjectId, true
}

// HasCredentialObjectId returns a boolean if a field has been set.
func (o *V6AttachmentResult) HasCredentialObjectId() bool {
	if o != nil && !IsNil(o.CredentialObjectId) {
		return true
	}

	return false
}

// SetCredentialObjectId gets a reference to the given string and assigns it to the CredentialObjectId field.
func (o *V6AttachmentResult) SetCredentialObjectId(v string) {
	o.CredentialObjectId = &v
}

// GetFileName returns the FileName field value if set, zero value otherwise.
func (o *V6AttachmentResult) GetFileName() string {
	if o == nil || IsNil(o.FileName) {
		var ret string
		return ret
	}
	return *o.FileName
}

// GetFileNameOk returns a tuple with the FileName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6AttachmentResult) GetFileNameOk() (*string, bool) {
	if o == nil || IsNil(o.FileName) {
		return nil, false
	}
	return o.FileName, true
}

// HasFileName returns a boolean if a field has been set.
func (o *V6AttachmentResult) HasFileName() bool {
	if o != nil && !IsNil(o.FileName) {
		return true
	}

	return false
}

// SetFileName gets a reference to the given string and assigns it to the FileName field.
func (o *V6AttachmentResult) SetFileName(v string) {
	o.FileName = &v
}

// GetFileData returns the FileData field value if set, zero value otherwise.
func (o *V6AttachmentResult) GetFileData() string {
	if o == nil || IsNil(o.FileData) {
		var ret string
		return ret
	}
	return *o.FileData
}

// GetFileDataOk returns a tuple with the FileData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6AttachmentResult) GetFileDataOk() (*string, bool) {
	if o == nil || IsNil(o.FileData) {
		return nil, false
	}
	return o.FileData, true
}

// HasFileData returns a boolean if a field has been set.
func (o *V6AttachmentResult) HasFileData() bool {
	if o != nil && !IsNil(o.FileData) {
		return true
	}

	return false
}

// SetFileData gets a reference to the given string and assigns it to the FileData field.
func (o *V6AttachmentResult) SetFileData(v string) {
	o.FileData = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *V6AttachmentResult) GetFileSize() int32 {
	if o == nil || IsNil(o.FileSize) {
		var ret int32
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V6AttachmentResult) GetFileSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *V6AttachmentResult) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int32 and assigns it to the FileSize field.
func (o *V6AttachmentResult) SetFileSize(v int32) {
	o.FileSize = &v
}

func (o V6AttachmentResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V6AttachmentResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CredentialObjectId) {
		toSerialize["CredentialObjectId"] = o.CredentialObjectId
	}
	if !IsNil(o.FileName) {
		toSerialize["FileName"] = o.FileName
	}
	if !IsNil(o.FileData) {
		toSerialize["FileData"] = o.FileData
	}
	if !IsNil(o.FileSize) {
		toSerialize["FileSize"] = o.FileSize
	}
	return toSerialize, nil
}

type NullableV6AttachmentResult struct {
	value *V6AttachmentResult
	isSet bool
}

func (v NullableV6AttachmentResult) Get() *V6AttachmentResult {
	return v.value
}

func (v *NullableV6AttachmentResult) Set(val *V6AttachmentResult) {
	v.value = val
	v.isSet = true
}

func (v NullableV6AttachmentResult) IsSet() bool {
	return v.isSet
}

func (v *NullableV6AttachmentResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV6AttachmentResult(val *V6AttachmentResult) *NullableV6AttachmentResult {
	return &NullableV6AttachmentResult{value: val, isSet: true}
}

func (v NullableV6AttachmentResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV6AttachmentResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


